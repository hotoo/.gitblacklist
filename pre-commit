#!/bin/bash

ERRORS_BUFFER=""

ROOT_DIR=$(git rev-parse --show-toplevel)
BLACKLIST=$ROOT_DIR/.precommitblacklist
LIST=$(git status --porcelain | grep -e '^\s*\(M\|A\)' | grep -v precommitblacklist)
for FILEPATH in $LIST
do
    if [ $(echo "$FILEPATH" | grep '^\s*M\s\+') ]; then
        FILE_ACTION="modified"
    elif [ $(echo "$FILEPATH" | grep '^\s*A\s\+') ]; then
        FILE_ACTION="added"
    else
        # if there's no extension, this returns the full filename
        FILENAME="${FILEPATH##*/}"
        BASE="${FILENAME%.[^.]*}"
        EXTENSION="${FILENAME:${#BASE} + 1}"
        if [[ -z "$BASE" && -n "$EXTENSION" ]]; then
            BASE=".$EXTENSION"
            EXTENSION=""
        fi
        if [ "$EXTENSION" != "$FILEPATH" ]; then
            BLACKLIST_FILE=$BLACKLIST.$EXTENSION
            if [ -f $BLACKLIST_FILE ]; then
                while IFS= read -r CHECK
                do
                    if [ "$CHECK" != "" ]; then
                        #echo "Checking for '$CHECK' in $FILE_ACTION file: $FILENAME"
                        ERRORS=$(grep "${CHECK}" $FILEPATH >&1)
                        if [ "$ERRORS" != "" ]; then
                            if [ "$ERRORS_BUFFER" != "" ]; then
                                ERRORS_BUFFER="$ERRORS_BUFFER\n$ERRORS"
                            else
                                ERRORS_BUFFER="$ERRORS"
                            fi
                            echo "${CHECK} found in file: $FILENAME"
                        fi
                    fi
                done < $BLACKLIST_FILE
            fi
        fi
    fi
done

if [ "$ERRORS_BUFFER" != "" ]; then
    echo
    echo "These errors were found in staged files: "
    echo -e $ERRORS_BUFFER
    echo
    echo "Can't commit, fix errors first."
    exit 1
else
    echo "Commited successfully."
fi
